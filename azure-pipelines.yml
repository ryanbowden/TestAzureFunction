# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'vs2017-win2016'

steps:

- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'select'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    modifyOutputPath: false
    zipAfterPublish: false
    arguments: '--no-restore --configuration Release --output ../publish_output'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'ls'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'cd ''.\publish_output'';
      ls;
      cd ''.\bin'';
      ls'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*Tests.dll
      !**\*TestAdapter.dll
      !**\obj\**'
    searchFolder: '$(System.DefaultWorkingDirectory)/publish_output'
    otherConsoleOptions: '/framework:".NETCoreApp,Version=v2.1"'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
    ArtifactName: 'drop'
